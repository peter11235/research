package drumset2;

import com.leapmotion.leap.Controller;
import com.leapmotion.leap.Frame;
import com.leapmotion.leap.Listener;
import com.leapmotion.leap.Pointable;
import com.leapmotion.leap.PointableList;
import com.leapmotion.leap.Screen;
import com.leapmotion.leap.ScreenList;
import com.leapmotion.leap.Vector;

public class DrumLeapListener extends Listener {

	DrumController drumController;
	Pointable left;
	Pointable right;
	boolean playMode = false;
	
	public DrumLeapListener(DrumController aDrumController)
	{
		drumController = aDrumController;
	}
	
	public void onConnect()
	{
		System.out.println("Connected...");
	}
	
	public void onFrame(Controller arg)
	{
		long lastFrameId = 0;
    	Frame frame = arg.frame();
    	if (frame.id() == lastFrameId) return;
    	processFrame(frame);
    	ScreenList screenList = arg.locatedScreens();
    	Screen screen;
    	if (!screenList.isEmpty()) screen = screenList.get(0);
    	lastFrameId = frame.id();	
	}
	
	public void processFrame(Frame frame)
	{
		if (playMode)
		{
			
		}
	}
	
	private boolean isHit(Frame frame)
	{
		PointableList pointables = frame.pointables();
		if (!pointables.isEmpty())
		{
			left = pointables.leftmost();
			right = pointables.rightmost();
		}
	}
	
	public Vector getLocation(Pointable pointy)
	{
		return pointy.tipPosition();
	}
	
	public void setPlayMode(boolean b)
	{
		playMode = b;
	}
	
	public void onDisconnect(Controller arg)
	{
		System.out.println("Disconnected...");
	}
}
